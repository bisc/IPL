/*
 * generated by Xtext 2.10.0
 */
package org.xtext.example.ipl.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.xtext.example.ipl.IPLPrettyPrinter
import org.xtext.example.ipl.iPL.IPLSpec
import org.xtext.example.ipl.iPL.ModelDecl
import org.xtext.example.ipl.validation.IPLRigidityProvider

//import org.xtext.example.ipl.iPL.EDouble

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class IPLGenerator extends AbstractGenerator {

	//private val smtVerifier = new SmtVerifier

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		val specs = resource.allContents.filter(IPLSpec).toList
		
		// generation of SMT for IPL formulas
		/*val formulasSMT = specs.map [ IPLSpec s |
			s.formulas.map [ Formula f |
				smtVerifier.verifyRigidFormula(f, s, resource, fsa)
			].join('\n')
		].join('\n')*/
		
		// have to renew smt verifier every formula to not carry state in SMTGenerator over
		specs.forEach[ spec |
			spec.formulas.forEach[ f, i |
				val filename = resource.URI.trimFileExtension.lastSegment + '-f' + i // no extension, smt generator adds it
				println('\n\nVerifying ' + IPLPrettyPrinter::print_formula(f))
				if(IPLRigidityProvider::isRigid(f)) { //rigid
					val res = (new SmtVerifierElemInts).verifyRigidFormula(f, spec, filename, fsa)
					println("Rigid IPL formula verified, result: " + res)
				} else { // non-rigid 
					// find a model declaration
					val mdls = spec.decls.filter[it instanceof ModelDecl]
					if (mdls.size == 0) {
						println('Error: cannot verify non-rigid formulas without a model')
					} else {					
						val res = (new SmtVerifierElemInts).verifyNonRigidFormula(f, mdls.get(0) as ModelDecl, spec, filename, fsa)
						println("Non-rigid IPL formula verified, result: " + res)
					}
				}
			]
		]
		

	}
	
}
